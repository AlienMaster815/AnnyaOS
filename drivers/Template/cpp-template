
UNUSED LOUSINE_PCI_DEVICE_TABLE SupportedHdaPciDevices[] = {


};

LOUDDK_API_ENTRY 
VOID UnloadDriver(PDRIVER_OBJECT DriverObject){
    LouPrint("DRIVER_NAME::UnloadDriver()\n");
    //we have nothing to unload
    LouPrint("DRIVER_NAME::UnloadDriver() STATUS_SUCCESS\n");
}


NTSTATUS AddDevice(
    PDRIVER_OBJECT DriverObject, 
    PDEVICE_OBJECT PlatformDevice
){
    LouPrint("DRIVER_NAME::AddDevice()\n");
    P_PCI_DEVICE_OBJECT PDEV = PlatformDevice->PDEV;
    uint8_t DeviceID = PlatformDevice->DeviceID;

    LouPrint("Pci Device ID:%d\n", DeviceID);

    LouPrint("PCI Device Flags:%bl\n", SupportedHdaPciDevices[DeviceID].DriverData);

    LouPrint("DRIVER_NAME::AddDevice() STATUS_SUCCESS\n");
    return STATUS_SUCCESS;
}

LOUDDK_API_ENTRY
NTSTATUS DriverEntry(
    PDRIVER_OBJECT  DriverObject,
    PUNICODE_STRING RegistryEntry
){
    LouPrint("DRIVER_NAME::DriverEntry()\n");
    //tell the System where are key Nt driver functions are
    DriverObject->DriverExtension->AddDevice = AddDevice;
    DriverObject->DriverUnload = UnloadDriver;
    //tell the losine kernel we will be using the
    //Lousine Kernel Driver Module (LKDM) alongside the
    //NT Kernel Moudle Subsystem so it fills
    //out the extra information relating to the LKDM
    DriverObject->DriverUsingLkdm = true;
    //fill LDM information
    DriverObject->DeviceTable = (uintptr_t)SupportedHdaPciDevices;

    LouPrint("DRIVER_NAME::DriverEntry() STATUS_SUCCESS\n");
    return STATUS_SUCCESS;
}

